<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

    <!-- 开启注解映射的支持 -->
    <mvc:annotation-driven/>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.gavin.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 配置视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql:///addressbook?useSSL=false&amp;serverTimezone=Hongkong&amp;useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="user" value="root"/>
        <property name="password" value="123456"/>
        <!--  每60秒检查所有连接池中的空闲连接。Default: 0  -->
        <property name="idleConnectionTestPeriod" value="60"/>
        <!--
         初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3
        -->
        <property name="initialPoolSize" value="5"/>
        <!--  最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0  -->
        <property name="maxIdleTime" value="60"/>
        <!--  连接池中保留的最大连接数。Default: 15  -->
        <property name="maxPoolSize" value="10"/>
        <!--  连接池中保留的最小连接数。  -->
        <property name="minPoolSize" value="5"/>
        <!--
         JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
                  属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
                  如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0
        -->
        <property name="maxStatements" value="100"/>
        <!--
         maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0
        -->
        <property name="maxStatementsPerConnection" value="3"/>
        <!--
         定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个显著提高测试速度。注意：
                  测试的表必须在初始数据源的时候就存在。Default: null
        -->
        <property name="preferredTestQuery" value="select 1"/>
        <!--  定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
        <property name="acquireRetryAttempts" value="3"/>
        <!--  两次连接中间隔时间，单位毫秒。Default: 1000  -->
        <property name="acquireRetryDelay" value="1000"/>
        <!--
         当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出
                  SQLException,如设为0则无限期等待。单位毫秒。Default: 0
        -->
        <property name="checkoutTimeout" value="30000"/>
    </bean>


    <!--配置连接工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.gavin.bean"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect:mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--扫描数据访问层路径，扫描mapper.xml文件和mapper接口文件-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.gavin.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>



    <!-- 自动扫描的包名 -->
    <context:component-scan base-package="com.gavin"/>
</beans>